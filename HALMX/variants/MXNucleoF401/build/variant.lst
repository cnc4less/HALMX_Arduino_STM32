ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"variant.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._Z12__io_putchari,"ax",%progbits
  20              		.align	1
  21              		.global	_Z12__io_putchari
  22              		.thumb
  23              		.thumb_func
  25              	_Z12__io_putchari:
  26              	.LFB211:
  27              		.file 1 "variant.cpp"
   1:variant.cpp   **** /*
   2:variant.cpp   ****   Copyright (c) 2011 Arduino.  All right reserved.
   3:variant.cpp   **** 
   4:variant.cpp   ****   This library is free software; you can redistribute it and/or
   5:variant.cpp   ****   modify it under the terms of the GNU Lesser General Public
   6:variant.cpp   ****   License as published by the Free Software Foundation; either
   7:variant.cpp   ****   version 2.1 of the License, or (at your option) any later version.
   8:variant.cpp   **** 
   9:variant.cpp   ****   This library is distributed in the hope that it will be useful,
  10:variant.cpp   ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:variant.cpp   ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  12:variant.cpp   ****   See the GNU Lesser General Public License for more details.
  13:variant.cpp   **** 
  14:variant.cpp   ****   You should have received a copy of the GNU Lesser General Public
  15:variant.cpp   ****   License along with this library; if not, write to the Free Software
  16:variant.cpp   ****   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  17:variant.cpp   **** */
  18:variant.cpp   **** 
  19:variant.cpp   **** #include "Arduino.h"
  20:variant.cpp   **** //#include "variant.h"
  21:variant.cpp   **** 
  22:variant.cpp   **** 
  23:variant.cpp   **** /*
  24:variant.cpp   ****  * DUE Board pin   |  PORT  | Label
  25:variant.cpp   ****  * ----------------+--------+-------
  26:variant.cpp   ****  *   0             |  PA8   | "RX0"
  27:variant.cpp   ****  *   1             |  PA9   | "TX0"
  28:variant.cpp   ****  *   2       TIOA0 |  PB25  |
  29:variant.cpp   ****  *   3       TIOA7 |  PC28  |
  30:variant.cpp   ****  *   4       NPCS1 |  PA29  |
  31:variant.cpp   ****  *           TIOB6 |  PC26  |
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 2


  32:variant.cpp   ****  *   5       TIOA6 |  PC25  |
  33:variant.cpp   ****  *   6       PWML7 |  PC24  |
  34:variant.cpp   ****  *   7       PWML6 |  PC23  |
  35:variant.cpp   ****  *   8       PWML5 |  PC22  |
  36:variant.cpp   ****  *   9       PWML4 |  PC21  |
  37:variant.cpp   ****  *  10       NPCS0 |  PA28  |
  38:variant.cpp   ****  *           TIOB7 |  PC29  |
  39:variant.cpp   ****  *  11       TIOA8 |  PD7   |
  40:variant.cpp   ****  *  12       TIOB8 |  PD8   |
  41:variant.cpp   ****  *  13       TIOB0 |  PB27  | LED AMBER "L"
  42:variant.cpp   ****  *  14       TXD3  |  PD4   | "TX3"
  43:variant.cpp   ****  *  15       RXD3  |  PD5   | "RX3"
  44:variant.cpp   ****  *  16       TXD1  |  PA13  | "TX2"
  45:variant.cpp   ****  *  17       RXD1  |  PA12  | "RX2"
  46:variant.cpp   ****  *  18       TXD0  |  PA11  | "TX1"
  47:variant.cpp   ****  *  19       RXD0  |  PA10  | "RX1"
  48:variant.cpp   ****  *  20             |  PB12  | "SDA"
  49:variant.cpp   ****  *  21             |  PB13  | "SCL"
  50:variant.cpp   ****  *  22             |  PB26  |
  51:variant.cpp   ****  *  23             |  PA14  |
  52:variant.cpp   ****  *  24             |  PA15  |
  53:variant.cpp   ****  *  25             |  PD0   |
  54:variant.cpp   ****  *  26             |  PD1   |
  55:variant.cpp   ****  *  27             |  PD2   |
  56:variant.cpp   ****  *  28             |  PD3   |
  57:variant.cpp   ****  *  29             |  PD6   |
  58:variant.cpp   ****  *  30             |  PD9   |
  59:variant.cpp   ****  *  31             |  PA7   |
  60:variant.cpp   ****  *  32             |  PD10  |
  61:variant.cpp   ****  *  33             |  PC1   |
  62:variant.cpp   ****  *  34             |  PC2   |
  63:variant.cpp   ****  *  35             |  PC3   |
  64:variant.cpp   ****  *  36             |  PC4   |
  65:variant.cpp   ****  *  37             |  PC5   |
  66:variant.cpp   ****  *  38             |  PC6   |
  67:variant.cpp   ****  *  39             |  PC7   |
  68:variant.cpp   ****  *  40             |  PC8   |
  69:variant.cpp   ****  *  41             |  PC9   |
  70:variant.cpp   ****  *  42             |  PA19  |
  71:variant.cpp   ****  *  43             |  PA20  |
  72:variant.cpp   ****  *  44             |  PC19  |
  73:variant.cpp   ****  *  45             |  PC18  |
  74:variant.cpp   ****  *  46             |  PC17  |
  75:variant.cpp   ****  *  47             |  PC16  |
  76:variant.cpp   ****  *  48             |  PC15  |
  77:variant.cpp   ****  *  49             |  PC14  |
  78:variant.cpp   ****  *  50             |  PC13  |
  79:variant.cpp   ****  *  51             |  PC12  |
  80:variant.cpp   ****  *  52       NPCS2 |  PB21  |
  81:variant.cpp   ****  *  53             |  PB14  |
  82:variant.cpp   ****  *  54             |  PA16  | "A0"
  83:variant.cpp   ****  *  55             |  PA24  | "A1"
  84:variant.cpp   ****  *  56             |  PA23  | "A2"
  85:variant.cpp   ****  *  57             |  PA22  | "A3"
  86:variant.cpp   ****  *  58       TIOB2 |  PA6   | "A4"
  87:variant.cpp   ****  *  69             |  PA4   | "A5"
  88:variant.cpp   ****  *  60       TIOB1 |  PA3   | "A6"
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 3


  89:variant.cpp   ****  *  61       TIOA1 |  PA2   | "A7"
  90:variant.cpp   ****  *  62             |  PB17  | "A8"
  91:variant.cpp   ****  *  63             |  PB18  | "A9"
  92:variant.cpp   ****  *  64             |  PB19  | "A10"
  93:variant.cpp   ****  *  65             |  PB20  | "A11"
  94:variant.cpp   ****  *  66             |  PB15  | "DAC0"
  95:variant.cpp   ****  *  67             |  PB16  | "DAC1"
  96:variant.cpp   ****  *  68             |  PA1   | "CANRX"
  97:variant.cpp   ****  *  69             |  PA0   | "CANTX"
  98:variant.cpp   ****  *  70             |  PA17  | "SDA1"
  99:variant.cpp   ****  *  71             |  PA18  | "SCL1"
 100:variant.cpp   ****  *  72             |  PC30  | LED AMBER "RX"
 101:variant.cpp   ****  *  73             |  PA21  | LED AMBER "TX"
 102:variant.cpp   ****  *  74       MISO  |  PA25  |
 103:variant.cpp   ****  *  75       MOSI  |  PA26  |
 104:variant.cpp   ****  *  76       SCLK  |  PA27  |
 105:variant.cpp   ****  *  77       NPCS0 |  PA28  |
 106:variant.cpp   ****  *  78       NPCS3 |  PB23  | unconnected!
 107:variant.cpp   ****  *
 108:variant.cpp   ****  * USB pin         |  PORT
 109:variant.cpp   ****  * ----------------+--------
 110:variant.cpp   ****  *  ID             |  PB11
 111:variant.cpp   ****  *  VBOF           |  PB10
 112:variant.cpp   ****  *
 113:variant.cpp   ****  */
 114:variant.cpp   **** 
 115:variant.cpp   **** 
 116:variant.cpp   **** #ifdef __cplusplus
 117:variant.cpp   **** extern "C" {
 118:variant.cpp   **** #endif
 119:variant.cpp   **** 
 120:variant.cpp   **** /*
 121:variant.cpp   **** 
 122:variant.cpp   ****  * Pins descriptions
 123:variant.cpp   **** 
 124:variant.cpp   ****  this is reworked to be a bit more abstract.  The main use of this array is for
 125:variant.cpp   ****  bit banged GPIO setup.  Since we are using the HAL libraries, the setup
 126:variant.cpp   ****  is through STM32CubeMX for our peripherals, rendering this table
 127:variant.cpp   ****  redundant for general io and peripheral setup
 128:variant.cpp   ****  
 129:variant.cpp   ****  What we have here is an Abstraction on top of another abstraction. 
 130:variant.cpp   ****  
 131:variant.cpp   ****  The abstraction is that to set or read a pin we only need two items of
 132:variant.cpp   ****  information, the port and the pin.  As Arduino abstracts by pin
 133:variant.cpp   ****  we use this abstraction to map into the following table the order
 134:variant.cpp   ****  of this table should be by Arduino D number
 135:variant.cpp   **** 
 136:variant.cpp   ****  The only thing the HAL API needs are the port and PIN references
 137:variant.cpp   **** 
 138:variant.cpp   ****  The following table is written in c shorthand it could also be set up
 139:variant.cpp   ****  with the more readable 
 140:variant.cpp   ****  
 141:variant.cpp   ****  g_Pin2PortMapArray[D1 ].GPIOx_Port = GPIOA;
 142:variant.cpp   ****  g_Pin2PortMapArray[D1 ].Pin_abstraction = GPIO_PIN_3    D0/PA3	USART_RX	 
 143:variant.cpp   ****  g_Pin2PortMapArray[D2 ].GPIOx_Port = GPIOA;
 144:variant.cpp   ****  g_Pin2PortMapArray[D2].Pin_abstraction = GPIO_PIN_2    D0/PA3	USART_RX
 145:variant.cpp   ****  ... ect ...
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 4


 146:variant.cpp   ****  Ideally this array should be non mutable and in flash	 
 147:variant.cpp   **** 
 148:variant.cpp   ****  
 149:variant.cpp   **** */
 150:variant.cpp   **** 
 151:variant.cpp   **** 
 152:variant.cpp   **** 
 153:variant.cpp   **** extern const Pin2PortMapArray g_Pin2PortMapArray[]=
 154:variant.cpp   **** {    
 155:variant.cpp   **** 	{GPIOA, GPIO_PIN_3	},	/*  D0/PA3	USART2_RX	*/
 156:variant.cpp   **** 	{GPIOA, GPIO_PIN_2	},	/*  D1/PA2	USART2_TX	*/
 157:variant.cpp   **** 	
 158:variant.cpp   ****     {GPIOA, GPIO_PIN_10	},	/*  D2/PA10	USART1_RX	*/
 159:variant.cpp   ****     {GPIOB, GPIO_PIN_3  },	/*  D3/PB3	SWO			*/
 160:variant.cpp   ****     {GPIOB, GPIO_PIN_5	},	/*  D4/PB5	GPIO T3		*/
 161:variant.cpp   ****     {GPIOB, GPIO_PIN_4  },	/*  D5/PB4  GPIO T3		*/
 162:variant.cpp   ****     {GPIOB, GPIO_PIN_10	},	/*  D6/PB10	I2C2_SCL	*/
 163:variant.cpp   ****     {GPIOA, GPIO_PIN_8}	,	/*  D7/PA8	GPIO T1		*/
 164:variant.cpp   **** 
 165:variant.cpp   ****     {GPIOA, GPIO_PIN_9	}, 	/*  D8/PA9	USART1_TX	*/
 166:variant.cpp   ****     {GPIOC, GPIO_PIN_7	}, 	/*  D9/PC7	USART6Rx GPIO */
 167:variant.cpp   ****     {GPIOB, GPIO_PIN_6	}, 	/*  D10/PB6	I2C1_SCL USART1TXAF */
 168:variant.cpp   ****     {GPIOA, GPIO_PIN_7	}, 	/*  D11/PA7	SPI_MOSI_NC	*/
 169:variant.cpp   ****     {GPIOA, GPIO_PIN_6	}, 	/*  D12/PA6	SPI_MISO_NC */
 170:variant.cpp   ****     
 171:variant.cpp   ****     {GPIOA, GPIO_PIN_5	},	/*  D13/PA5 LED - no ADC12_IN5 SPI_SCK !*/
 172:variant.cpp   ****     
 173:variant.cpp   ****     {GPIOB, GPIO_PIN_9	}, 	/*  D14/PB9 I2C1_SDA	*/
 174:variant.cpp   ****     {GPIOB, GPIO_PIN_8	}, 	/*  D15/PB8 I2C1_SCL	*/
 175:variant.cpp   **** 
 176:variant.cpp   ****     {GPIOA, GPIO_PIN_0	}, 	/*  D16/A0/PA0 GPIO		*/
 177:variant.cpp   ****     {GPIOA, GPIO_PIN_1	}, 	/*  D17/A1/PA1 GPIO		*/
 178:variant.cpp   ****     {GPIOA, GPIO_PIN_4	}, 	/*  D18/A2/PA4 SPI_NSS	*/
 179:variant.cpp   ****     {GPIOB, GPIO_PIN_0	}, 	/*  D19/A3/PB0 GPIO		*/
 180:variant.cpp   ****     {GPIOC, GPIO_PIN_1	}, 	/*  D20/A4/PC1 GPIO		*/
 181:variant.cpp   ****     {GPIOC, GPIO_PIN_0	},  /*  D21/A5/PC0 GPIO		*/
 182:variant.cpp   **** 
 183:variant.cpp   ****     /*
 184:variant.cpp   ****     	 these signals are only on the Morpho headers
 185:variant.cpp   ****     	 Odd pins are on the left header
 186:variant.cpp   ****     	 Even pins are on the right header                 
 187:variant.cpp   ****     */
 188:variant.cpp   ****     
 189:variant.cpp   ****     {GPIOC, GPIO_PIN_10 },	/*  D22/PC10 	SPI_SCK				ML1 */
 190:variant.cpp   **** 	{GPIOC, GPIO_PIN_12 },	/*  D23/PC12	SPI_MOSI			ML3 */
 191:variant.cpp   ****     {GPIOB, GPIO_PIN_7  },	/*  D24/PB7		I2C1_SDA USART1RxAF	M21 */
 192:variant.cpp   ****     {GPIOC, GPIO_PIN_13 },	/*  D25/PC13	USER BLUE BUTTON	M23 */
 193:variant.cpp   ****     {GPIOC, GPIO_PIN_14 },	/*  D26/PC14	RCC_OSC32_IN 		M25 */
 194:variant.cpp   ****     {GPIOC, GPIO_PIN_15 },	/*  D27/PC15	RCC_OSC32_OUT		M26 */
 195:variant.cpp   ****     {GPIOC, GPIO_PIN_2  },	/*  D28/PC2		SPI2_MISO			M35 */
 196:variant.cpp   ****     {GPIOC, GPIO_PIN_3  },	/*  D29/PC3		GPIO				M37 */
 197:variant.cpp   ****     {GPIOC, GPIO_PIN_11 },	/*  D30/PC11	SPI3_MISO			ML2 */
 198:variant.cpp   ****     {GPIOD, GPIO_PIN_2, },	/*  D31/PD2 	GPIO				ML4 */
 199:variant.cpp   ****     {GPIOC, GPIO_PIN_9, },	/*  D32/PC9		GPIO				MR1 */
 200:variant.cpp   ****     {GPIOC, GPIO_PIN_8, },	/*  D33/PC8		GPIO				MR2 */
 201:variant.cpp   ****     {GPIOC, GPIO_PIN_6, },	/*  D34/PC6		USART6Tx GPOO		MR4 */
 202:variant.cpp   ****     {GPIOC, GPIO_PIN_5	},	/*  D35/PC5		GPIO				MR6 */
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 5


 203:variant.cpp   ****     {GPIOA, GPIO_PIN_12	},	/*  D36/PA12	USB_DP USART6_RX 	M12 AF */
 204:variant.cpp   ****     {GPIOA, GPIO_PIN_11 },	/*  D37/PA11	USB_DM USART6_TX 	M14 AF */
 205:variant.cpp   ****     {GPIOB, GPIO_PIN_12,},	/*  D38/PB12	SPI2_NSS			M16 */
 206:variant.cpp   ****     {GPIOB, GPIO_PIN_11 },	/*  D39/PB11	VCAPPower			M18 PWM-not working?*/
 207:variant.cpp   ****     {GPIOB, GPIO_PIN_2  },	/*  D40/PB2		BOOT1 !!			ML7 */
 208:variant.cpp   ****     {GPIOB, GPIO_PIN_1	},	/*  D41/PB1		GPIO 				M24 */
 209:variant.cpp   ****     {GPIOB, GPIO_PIN_15 },	/*  D42/PB15	SPI2_MOSI			M26 */
 210:variant.cpp   ****     {GPIOB, GPIO_PIN_14 },	/*  D43/PB14	SPI2_MISO			M28 */
 211:variant.cpp   ****     {GPIOB, GPIO_PIN_13 },	/*  D44/PB13	SPI2_SCK			M30 */
 212:variant.cpp   ****     {GPIOC, GPIO_PIN_4, }	/*  D45/PC4		GPIO				M34 */
 213:variant.cpp   **** 
 214:variant.cpp   ****   	// JTAG Single wire pins
 215:variant.cpp   **** 	// {GPIOA, NULL,   NULL, 13, 0, ADCx},/* Dxx/PA13 	TMS	do not use	M13 */
 216:variant.cpp   **** 	// {GPIOA, NULL,   NULL, 14, 0, ADCx},/* Dxx/PA14	TCK do not use	M15 */
 217:variant.cpp   **** 
 218:variant.cpp   **** 	// sheepdoll -- not sure why this one is locked out?
 219:variant.cpp   **** 	// {GPIOA, TIMER2, NULL, 15, 1, ADCx},/* Dxx/PA15 	TDI do not use	M17 */
 220:variant.cpp   **** 	
 221:variant.cpp   **** 	
 222:variant.cpp   **** } ;
 223:variant.cpp   **** 
 224:variant.cpp   **** #ifdef __cplusplus
 225:variant.cpp   **** }
 226:variant.cpp   **** #endif
 227:variant.cpp   **** 
 228:variant.cpp   **** /*
 229:variant.cpp   ****  * UART objects
 230:variant.cpp   ****  */
 231:variant.cpp   **** RingBuffer rx_buffer1;
 232:variant.cpp   **** RingBuffer tx_buffer1;
 233:variant.cpp   **** 
 234:variant.cpp   **** 
 235:variant.cpp   **** /*
 236:variant.cpp   **** 	install bridge hooks to syscalls that will allow printf() to
 237:variant.cpp   **** 	access one of the USARTS
 238:variant.cpp   **** */
 239:variant.cpp   **** 
 240:variant.cpp   **** #ifdef __GNUC__
 241:variant.cpp   ****   /* With GCC/RAISONANCE, small printf (option LD Linker->Libraries->Small printf
 242:variant.cpp   ****      set to 'Yes') calls __io_putchar() */
 243:variant.cpp   ****   #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
 244:variant.cpp   **** #else
 245:variant.cpp   ****   #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
 246:variant.cpp   **** #endif /* __GNUC__ */
 247:variant.cpp   **** 
 248:variant.cpp   **** /**
 249:variant.cpp   ****   * @brief  Retargets the C library printf function to the USART.
 250:variant.cpp   ****   * @param  None
 251:variant.cpp   ****   * @retval None
 252:variant.cpp   ****   */
 253:variant.cpp   **** PUTCHAR_PROTOTYPE
 254:variant.cpp   **** {
  28              		.loc 1 254 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 6


  33 0000 07B5     		push	{r0, r1, r2, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 14, -4
  36              		.loc 1 254 0
  37 0002 02A9     		add	r1, sp, #8
 255:variant.cpp   ****   /* Place your implementation of fputc here */
 256:variant.cpp   ****   /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
 257:variant.cpp   ****   
 258:variant.cpp   ****   /* 
 259:variant.cpp   ****   	huart6 is defined in usart.h and instantiated in usart.c 
 260:variant.cpp   ****   	usart.h is defined in chip.h and the header is loaded through UARTClass.h
 261:variant.cpp   ****   */ 
 262:variant.cpp   ****   
 263:variant.cpp   ****   HAL_UART_Transmit(&huart6, (uint8_t *)&ch, 1, 0xFFFF); 
  38              		.loc 1 263 0
  39 0004 4FF6FF73 		movw	r3, #65535
 254:variant.cpp   ****   /* Place your implementation of fputc here */
  40              		.loc 1 254 0
  41 0008 41F8040D 		str	r0, [r1, #-4]!
  42              		.loc 1 263 0
  43 000c 0122     		movs	r2, #1
  44 000e 0348     		ldr	r0, .L2
  45              	.LVL1:
  46 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  47              	.LVL2:
 264:variant.cpp   **** 
 265:variant.cpp   ****   return ch;
 266:variant.cpp   **** }
  48              		.loc 1 266 0
  49 0014 0198     		ldr	r0, [sp, #4]
  50 0016 03B0     		add	sp, sp, #12
  51              		.cfi_def_cfa_offset 4
  52              		@ sp needed
  53 0018 5DF804FB 		ldr	pc, [sp], #4
  54              	.LVL3:
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 001c 00000000 		.word	huart6
  59              		.cfi_endproc
  60              	.LFE211:
  62              		.section	.text._Z11serialEventv,"ax",%progbits
  63              		.align	1
  64              		.weak	_Z11serialEventv
  65              		.thumb
  66              		.thumb_func
  68              	_Z11serialEventv:
  69              	.LFB222:
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 7047     		bx	lr
  75              		.cfi_endproc
  76              	.LFE222:
  78              		.section	.text._Z12UART_Handlerv,"ax",%progbits
  79              		.align	1
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 7


  80              		.global	_Z12UART_Handlerv
  81              		.thumb
  82              		.thumb_func
  84              	_Z12UART_Handlerv:
  85              	.LFB220:
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90 0000 7047     		bx	lr
  91              		.cfi_endproc
  92              	.LFE220:
  94              		.section	.text._Z12serialEvent1v,"ax",%progbits
  95              		.align	1
  96              		.weak	_Z12serialEvent1v
  97              		.thumb
  98              		.thumb_func
 100              	_Z12serialEvent1v:
 101              	.LFB214:
 267:variant.cpp   **** 
 268:variant.cpp   **** //UARTClass Serial(UART, UART_IRQn, ID_UART, &rx_buffer1, &tx_buffer1);
 269:variant.cpp   **** //UARTClass Serial(&huart6, USART6_IRQn, 6, &rx_buffer1, &tx_buffer1);
 270:variant.cpp   **** void serialEvent() __attribute__((weak));
 271:variant.cpp   **** void serialEvent() { }
 272:variant.cpp   **** 
 273:variant.cpp   **** // IT handlers
 274:variant.cpp   **** void UART_Handler(void)
 275:variant.cpp   **** {
 276:variant.cpp   **** //  Serial.IrqHandler();
 277:variant.cpp   **** }
 278:variant.cpp   **** 
 279:variant.cpp   **** // ----------------------------------------------------------------------------
 280:variant.cpp   **** /*
 281:variant.cpp   ****  * USART objects
 282:variant.cpp   ****  */
 283:variant.cpp   **** #if 1
 284:variant.cpp   **** RingBuffer rx_buffer2;
 285:variant.cpp   **** //RingBuffer rx_buffer3;
 286:variant.cpp   **** //RingBuffer rx_buffer4;
 287:variant.cpp   **** RingBuffer tx_buffer2;
 288:variant.cpp   **** //RingBuffer tx_buffer3;
 289:variant.cpp   **** //RingBuffer tx_buffer4;
 290:variant.cpp   **** 
 291:variant.cpp   **** //USARTClass Serial1(&huart2, USART2_IRQn, 2, &rx_buffer2, &tx_buffer2);
 292:variant.cpp   **** void serialEvent1() __attribute__((weak));
 293:variant.cpp   **** void serialEvent1() { }
 102              		.loc 1 293 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107 0000 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE214:
 111              		.section	.text._Z14USART0_Handlerv,"ax",%progbits
 112              		.align	1
 113              		.global	_Z14USART0_Handlerv
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 8


 114              		.thumb
 115              		.thumb_func
 117              	_Z14USART0_Handlerv:
 118              	.LFB215:
 294:variant.cpp   **** //USARTClass Serial2(USART1, USART1_IRQn, ID_USART1, &rx_buffer3, &tx_buffer3);
 295:variant.cpp   **** //void serialEvent2() __attribute__((weak));
 296:variant.cpp   **** //void serialEvent2() { }
 297:variant.cpp   **** //USARTClass Serial3(USART3, USART3_IRQn, ID_USART3, &rx_buffer4, &tx_buffer4);
 298:variant.cpp   **** //void serialEvent3() __attribute__((weak));
 299:variant.cpp   **** //void serialEvent3() { }
 300:variant.cpp   **** 
 301:variant.cpp   **** // IT handlers
 302:variant.cpp   **** void USART0_Handler(void)
 303:variant.cpp   **** {
 119              		.loc 1 303 0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE215:
 128              		.section	.text.startup._GLOBAL__sub_I_g_Pin2PortMapArray,"ax",%progbits
 129              		.align	1
 130              		.thumb
 131              		.thumb_func
 133              	_GLOBAL__sub_I_g_Pin2PortMapArray:
 134              	.LFB218:
 304:variant.cpp   **** //  Serial1.IrqHandler();
 305:variant.cpp   **** }
 306:variant.cpp   **** 
 307:variant.cpp   **** //void USART1_Handler(void)
 308:variant.cpp   **** //{
 309:variant.cpp   **** //  Serial2.IrqHandler();
 310:variant.cpp   **** //}
 311:variant.cpp   **** 
 312:variant.cpp   **** //void USART3_Handler(void)
 313:variant.cpp   **** //{
 314:variant.cpp   **** //  Serial3.IrqHandler();
 315:variant.cpp   **** //}
 316:variant.cpp   **** 
 317:variant.cpp   **** // ----------------------------------------------------------------------------
 318:variant.cpp   **** 
 319:variant.cpp   **** void serialEventRun(void)
 320:variant.cpp   **** {
 321:variant.cpp   ****   if (Serial.available()) serialEvent();
 322:variant.cpp   ****   if (Serial1.available()) serialEvent1();
 323:variant.cpp   **** //  if (Serial2.available()) serialEvent2();
 324:variant.cpp   **** //  if (Serial3.available()) serialEvent3();
 325:variant.cpp   **** }
 135              		.loc 1 325 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              	.LVL4:
 140              		.loc 1 325 0
 141 0000 08B5     		push	{r3, lr}
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 9


 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 3, -8
 144              		.cfi_offset 14, -4
 145              	.LBB4:
 146              	.LBB5:
 231:variant.cpp   **** RingBuffer tx_buffer1;
 147              		.loc 1 231 0
 148 0002 0748     		ldr	r0, .L9
 149 0004 FFF7FEFF 		bl	_ZN10RingBufferC1Ev
 150              	.LVL5:
 232:variant.cpp   **** 
 151              		.loc 1 232 0
 152 0008 0648     		ldr	r0, .L9+4
 153 000a FFF7FEFF 		bl	_ZN10RingBufferC1Ev
 154              	.LVL6:
 284:variant.cpp   **** //RingBuffer rx_buffer3;
 155              		.loc 1 284 0
 156 000e 0648     		ldr	r0, .L9+8
 157 0010 FFF7FEFF 		bl	_ZN10RingBufferC1Ev
 158              	.LVL7:
 287:variant.cpp   **** //RingBuffer tx_buffer3;
 159              		.loc 1 287 0
 160 0014 0548     		ldr	r0, .L9+12
 161              	.LBE5:
 162              	.LBE4:
 163              		.loc 1 325 0
 164 0016 BDE80840 		pop	{r3, lr}
 165              		.cfi_restore 14
 166              		.cfi_restore 3
 167              		.cfi_def_cfa_offset 0
 168              	.LBB7:
 169              	.LBB6:
 287:variant.cpp   **** //RingBuffer tx_buffer3;
 170              		.loc 1 287 0
 171 001a FFF7FEBF 		b	_ZN10RingBufferC1Ev
 172              	.LVL8:
 173              	.L10:
 174 001e 00BF     		.align	2
 175              	.L9:
 176 0020 00000000 		.word	.LANCHOR0
 177 0024 00000000 		.word	.LANCHOR1
 178 0028 00000000 		.word	.LANCHOR2
 179 002c 00000000 		.word	.LANCHOR3
 180              	.LBE6:
 181              	.LBE7:
 182              		.cfi_endproc
 183              	.LFE218:
 185              		.section	.init_array,"aw",%init_array
 186              		.align	2
 187 0000 00000000 		.word	_GLOBAL__sub_I_g_Pin2PortMapArray(target1)
 188              		.section	.text._Z14serialEventRunv,"ax",%progbits
 189              		.align	1
 190              		.weak	_Z14serialEventRunv
 191              		.thumb
 192              		.thumb_func
 194              	_Z14serialEventRunv:
 195              	.LFB216:
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 10


 320:variant.cpp   ****   if (Serial.available()) serialEvent();
 196              		.loc 1 320 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 08B5     		push	{r3, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
 321:variant.cpp   ****   if (Serial1.available()) serialEvent1();
 204              		.loc 1 321 0
 205 0002 0648     		ldr	r0, .L21
 206 0004 FFF7FEFF 		bl	_ZN9UARTClass9availableEv
 207              	.LVL9:
 208 0008 08B1     		cbz	r0, .L12
 321:variant.cpp   ****   if (Serial1.available()) serialEvent1();
 209              		.loc 1 321 0 is_stmt 0 discriminator 1
 210 000a FFF7FEFF 		bl	_Z11serialEventv
 211              	.LVL10:
 212              	.L12:
 322:variant.cpp   **** //  if (Serial2.available()) serialEvent2();
 213              		.loc 1 322 0 is_stmt 1
 214 000e 0448     		ldr	r0, .L21+4
 215 0010 FFF7FEFF 		bl	_ZN9UARTClass9availableEv
 216              	.LVL11:
 217 0014 08B1     		cbz	r0, .L11
 322:variant.cpp   **** //  if (Serial2.available()) serialEvent2();
 218              		.loc 1 322 0 is_stmt 0 discriminator 1
 219 0016 FFF7FEFF 		bl	_Z12serialEvent1v
 220              	.LVL12:
 221              	.L11:
 222 001a 08BD     		pop	{r3, pc}
 223              	.L22:
 224              		.align	2
 225              	.L21:
 226 001c 00000000 		.word	Serial
 227 0020 00000000 		.word	Serial1
 228              		.cfi_endproc
 229              	.LFE216:
 231              		.global	tx_buffer2
 232              		.global	rx_buffer2
 233              		.global	tx_buffer1
 234              		.global	rx_buffer1
 235              		.global	g_Pin2PortMapArray
 236              		.section	.bss.tx_buffer1,"aw",%nobits
 237              		.align	2
 238              		.set	.LANCHOR1,. + 0
 241              	tx_buffer1:
 242 0000 00000000 		.space	136
 242      00000000 
 242      00000000 
 242      00000000 
 242      00000000 
 243              		.section	.bss.tx_buffer2,"aw",%nobits
 244              		.align	2
 245              		.set	.LANCHOR3,. + 0
 248              	tx_buffer2:
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 11


 249 0000 00000000 		.space	136
 249      00000000 
 249      00000000 
 249      00000000 
 249      00000000 
 250              		.section	.bss.rx_buffer1,"aw",%nobits
 251              		.align	2
 252              		.set	.LANCHOR0,. + 0
 255              	rx_buffer1:
 256 0000 00000000 		.space	136
 256      00000000 
 256      00000000 
 256      00000000 
 256      00000000 
 257              		.section	.bss.rx_buffer2,"aw",%nobits
 258              		.align	2
 259              		.set	.LANCHOR2,. + 0
 262              	rx_buffer2:
 263 0000 00000000 		.space	136
 263      00000000 
 263      00000000 
 263      00000000 
 263      00000000 
 264              		.section	.rodata.g_Pin2PortMapArray,"a",%progbits
 265              		.align	2
 268              	g_Pin2PortMapArray:
 269 0000 00000240 		.word	1073872896
 270 0004 08000000 		.word	8
 271 0008 00000240 		.word	1073872896
 272 000c 04000000 		.word	4
 273 0010 00000240 		.word	1073872896
 274 0014 00040000 		.word	1024
 275 0018 00040240 		.word	1073873920
 276 001c 08000000 		.word	8
 277 0020 00040240 		.word	1073873920
 278 0024 20000000 		.word	32
 279 0028 00040240 		.word	1073873920
 280 002c 10000000 		.word	16
 281 0030 00040240 		.word	1073873920
 282 0034 00040000 		.word	1024
 283 0038 00000240 		.word	1073872896
 284 003c 00010000 		.word	256
 285 0040 00000240 		.word	1073872896
 286 0044 00020000 		.word	512
 287 0048 00080240 		.word	1073874944
 288 004c 80000000 		.word	128
 289 0050 00040240 		.word	1073873920
 290 0054 40000000 		.word	64
 291 0058 00000240 		.word	1073872896
 292 005c 80000000 		.word	128
 293 0060 00000240 		.word	1073872896
 294 0064 40000000 		.word	64
 295 0068 00000240 		.word	1073872896
 296 006c 20000000 		.word	32
 297 0070 00040240 		.word	1073873920
 298 0074 00020000 		.word	512
 299 0078 00040240 		.word	1073873920
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 12


 300 007c 00010000 		.word	256
 301 0080 00000240 		.word	1073872896
 302 0084 01000000 		.word	1
 303 0088 00000240 		.word	1073872896
 304 008c 02000000 		.word	2
 305 0090 00000240 		.word	1073872896
 306 0094 10000000 		.word	16
 307 0098 00040240 		.word	1073873920
 308 009c 01000000 		.word	1
 309 00a0 00080240 		.word	1073874944
 310 00a4 02000000 		.word	2
 311 00a8 00080240 		.word	1073874944
 312 00ac 01000000 		.word	1
 313 00b0 00080240 		.word	1073874944
 314 00b4 00040000 		.word	1024
 315 00b8 00080240 		.word	1073874944
 316 00bc 00100000 		.word	4096
 317 00c0 00040240 		.word	1073873920
 318 00c4 80000000 		.word	128
 319 00c8 00080240 		.word	1073874944
 320 00cc 00200000 		.word	8192
 321 00d0 00080240 		.word	1073874944
 322 00d4 00400000 		.word	16384
 323 00d8 00080240 		.word	1073874944
 324 00dc 00800000 		.word	32768
 325 00e0 00080240 		.word	1073874944
 326 00e4 04000000 		.word	4
 327 00e8 00080240 		.word	1073874944
 328 00ec 08000000 		.word	8
 329 00f0 00080240 		.word	1073874944
 330 00f4 00080000 		.word	2048
 331 00f8 000C0240 		.word	1073875968
 332 00fc 04000000 		.word	4
 333 0100 00080240 		.word	1073874944
 334 0104 00020000 		.word	512
 335 0108 00080240 		.word	1073874944
 336 010c 00010000 		.word	256
 337 0110 00080240 		.word	1073874944
 338 0114 40000000 		.word	64
 339 0118 00080240 		.word	1073874944
 340 011c 20000000 		.word	32
 341 0120 00000240 		.word	1073872896
 342 0124 00100000 		.word	4096
 343 0128 00000240 		.word	1073872896
 344 012c 00080000 		.word	2048
 345 0130 00040240 		.word	1073873920
 346 0134 00100000 		.word	4096
 347 0138 00040240 		.word	1073873920
 348 013c 00080000 		.word	2048
 349 0140 00040240 		.word	1073873920
 350 0144 04000000 		.word	4
 351 0148 00040240 		.word	1073873920
 352 014c 02000000 		.word	2
 353 0150 00040240 		.word	1073873920
 354 0154 00800000 		.word	32768
 355 0158 00040240 		.word	1073873920
 356 015c 00400000 		.word	16384
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 13


 357 0160 00040240 		.word	1073873920
 358 0164 00200000 		.word	8192
 359 0168 00080240 		.word	1073874944
 360 016c 10000000 		.word	16
 361              		.text
 362              	.Letext0:
 363              		.file 2 "/Applications/Ac6/SystemWorkbench.app/Contents/Eclipse/plugins/fr.ac6.mcu.externaltools.a
 364              		.file 3 "/Applications/Ac6/SystemWorkbench.app/Contents/Eclipse/plugins/fr.ac6.mcu.externaltools.a
 365              		.file 4 "/Applications/Ac6/SystemWorkbench.app/Contents/Eclipse/plugins/fr.ac6.mcu.externaltools.a
 366              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 367              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 368              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 369              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 370              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 371              		.file 10 "../../cores/mapleMX/RingBuffer.h"
 372              		.file 11 "./variant.h"
 373              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 374              		.file 13 "Inc/usart.h"
 375              		.file 14 "../../cores/mapleMX/Print.h"
 376              		.file 15 "../../cores/mapleMX/UARTClass.h"
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 variant.cpp
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:20     .text._Z12__io_putchari:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:25     .text._Z12__io_putchari:0000000000000000 _Z12__io_putchari
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:58     .text._Z12__io_putchari:000000000000001c $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:63     .text._Z11serialEventv:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:68     .text._Z11serialEventv:0000000000000000 _Z11serialEventv
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:79     .text._Z12UART_Handlerv:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:84     .text._Z12UART_Handlerv:0000000000000000 _Z12UART_Handlerv
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:95     .text._Z12serialEvent1v:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:100    .text._Z12serialEvent1v:0000000000000000 _Z12serialEvent1v
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:112    .text._Z14USART0_Handlerv:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:117    .text._Z14USART0_Handlerv:0000000000000000 _Z14USART0_Handlerv
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:129    .text.startup._GLOBAL__sub_I_g_Pin2PortMapArray:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:133    .text.startup._GLOBAL__sub_I_g_Pin2PortMapArray:0000000000000000 _GLOBAL__sub_I_g_Pin2PortMapArray
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:176    .text.startup._GLOBAL__sub_I_g_Pin2PortMapArray:0000000000000020 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:186    .init_array:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:189    .text._Z14serialEventRunv:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:194    .text._Z14serialEventRunv:0000000000000000 _Z14serialEventRunv
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:226    .text._Z14serialEventRunv:000000000000001c $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:248    .bss.tx_buffer2:0000000000000000 tx_buffer2
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:262    .bss.rx_buffer2:0000000000000000 rx_buffer2
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:241    .bss.tx_buffer1:0000000000000000 tx_buffer1
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:255    .bss.rx_buffer1:0000000000000000 rx_buffer1
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:268    .rodata.g_Pin2PortMapArray:0000000000000000 g_Pin2PortMapArray
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:237    .bss.tx_buffer1:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:244    .bss.tx_buffer2:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:251    .bss.rx_buffer1:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:258    .bss.rx_buffer2:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//ccVBoEwR.s:265    .rodata.g_Pin2PortMapArray:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart6
_ZN10RingBufferC1Ev
_ZN9UARTClass9availableEv
Serial
Serial1
