ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usbd_desc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  19              		.align	1
  20              		.global	USBD_FS_DeviceDescriptor
  21              		.thumb
  22              		.thumb_func
  24              	USBD_FS_DeviceDescriptor:
  25              	.LFB125:
  26              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /**
   2:Src/usbd_desc.c ****   ******************************************************************************
   3:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   4:Src/usbd_desc.c ****   * @version        : v1.0_Cube
   5:Src/usbd_desc.c ****   * @brief          : This file implements the USB Device descriptors
   6:Src/usbd_desc.c ****   ******************************************************************************
   7:Src/usbd_desc.c ****   *
   8:Src/usbd_desc.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/usbd_desc.c ****   * are permitted provided that the following conditions are met:
  12:Src/usbd_desc.c ****   * 1. Redistributions of source code must retain the above copyright notice,
  13:Src/usbd_desc.c ****   * this list of conditions and the following disclaimer.
  14:Src/usbd_desc.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/usbd_desc.c ****   * this list of conditions and the following disclaimer in the documentation
  16:Src/usbd_desc.c ****   * and/or other materials provided with the distribution.
  17:Src/usbd_desc.c ****   * 3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/usbd_desc.c ****   * may be used to endorse or promote products derived from this software
  19:Src/usbd_desc.c ****   * without specific prior written permission.
  20:Src/usbd_desc.c ****   *
  21:Src/usbd_desc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/usbd_desc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/usbd_desc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/usbd_desc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/usbd_desc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/usbd_desc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/usbd_desc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/usbd_desc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/usbd_desc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/usbd_desc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/usbd_desc.c ****   *
  32:Src/usbd_desc.c ****   ******************************************************************************
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 2


  33:Src/usbd_desc.c **** */
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  36:Src/usbd_desc.c **** #include "usbd_core.h"
  37:Src/usbd_desc.c **** #include "usbd_desc.h"
  38:Src/usbd_desc.c **** #include "usbd_conf.h"
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @defgroup USBD_DESC 
  45:Src/usbd_desc.c ****   * @brief USBD descriptors module
  46:Src/usbd_desc.c ****   * @{
  47:Src/usbd_desc.c ****   */ 
  48:Src/usbd_desc.c **** 
  49:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */ 
  52:Src/usbd_desc.c **** /**
  53:Src/usbd_desc.c ****   * @}
  54:Src/usbd_desc.c ****   */ 
  55:Src/usbd_desc.c **** 
  56:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines
  57:Src/usbd_desc.c ****   * @{
  58:Src/usbd_desc.c ****   */ 
  59:Src/usbd_desc.c **** #define USBD_VID     1155
  60:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  61:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  62:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  63:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  64:Src/usbd_desc.c **** /* USER CODE BEGIN SERIALNUMBER_STRING_FS */
  65:Src/usbd_desc.c **** #define USBD_SERIALNUMBER_STRING_FS     "00000000001A"
  66:Src/usbd_desc.c **** /* USER CODE END SERIALNUMBER_STRING_FS */
  67:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  68:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  69:Src/usbd_desc.c **** 
  70:Src/usbd_desc.c **** #define USB_SIZ_BOS_DESC            0x0C
  71:Src/usbd_desc.c **** 
  72:Src/usbd_desc.c **** /**
  73:Src/usbd_desc.c ****   * @}
  74:Src/usbd_desc.c ****   */ 
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros
  77:Src/usbd_desc.c ****   * @{
  78:Src/usbd_desc.c ****   */ 
  79:Src/usbd_desc.c **** /**
  80:Src/usbd_desc.c ****   * @}
  81:Src/usbd_desc.c ****   */ 
  82:Src/usbd_desc.c **** 
  83:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables
  84:Src/usbd_desc.c ****   * @{
  85:Src/usbd_desc.c ****   */ 
  86:Src/usbd_desc.c **** uint8_t *     USBD_FS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
  87:Src/usbd_desc.c **** uint8_t *     USBD_FS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
  88:Src/usbd_desc.c **** uint8_t *     USBD_FS_ManufacturerStrDescriptor ( USBD_SpeedTypeDef speed , uint16_t *length);
  89:Src/usbd_desc.c **** uint8_t *     USBD_FS_ProductStrDescriptor ( USBD_SpeedTypeDef speed , uint16_t *length);
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 3


  90:Src/usbd_desc.c **** uint8_t *     USBD_FS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
  91:Src/usbd_desc.c **** uint8_t *     USBD_FS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
  92:Src/usbd_desc.c **** uint8_t *     USBD_FS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length);
  93:Src/usbd_desc.c **** 
  94:Src/usbd_desc.c **** #ifdef USB_SUPPORT_USER_STRING_DESC
  95:Src/usbd_desc.c **** uint8_t *     USBD_FS_USRStringDesc (USBD_SpeedTypeDef speed, uint8_t idx , uint16_t *length);  
  96:Src/usbd_desc.c **** #endif /* USB_SUPPORT_USER_STRING_DESC */  
  97:Src/usbd_desc.c **** 
  98:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
  99:Src/usbd_desc.c **** uint8_t *USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed , uint16_t *length);
 100:Src/usbd_desc.c **** #endif
 101:Src/usbd_desc.c **** 
 102:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 103:Src/usbd_desc.c **** {
 104:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor,
 105:Src/usbd_desc.c ****   USBD_FS_LangIDStrDescriptor, 
 106:Src/usbd_desc.c ****   USBD_FS_ManufacturerStrDescriptor,
 107:Src/usbd_desc.c ****   USBD_FS_ProductStrDescriptor,
 108:Src/usbd_desc.c ****   USBD_FS_SerialStrDescriptor,
 109:Src/usbd_desc.c ****   USBD_FS_ConfigStrDescriptor,
 110:Src/usbd_desc.c ****   USBD_FS_InterfaceStrDescriptor,
 111:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)  
 112:Src/usbd_desc.c ****   USBD_FS_USR_BOSDescriptor,
 113:Src/usbd_desc.c **** #endif  
 114:Src/usbd_desc.c **** };
 115:Src/usbd_desc.c **** 
 116:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 117:Src/usbd_desc.c ****   #pragma data_alignment=4   
 118:Src/usbd_desc.c **** #endif
 119:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 120:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 121:Src/usbd_desc.c ****   {
 122:Src/usbd_desc.c ****     0x12,                       /*bLength */
 123:Src/usbd_desc.c ****     USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 124:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 125:Src/usbd_desc.c ****     0x01,                       /*bcdUSB */ /* changed to USB version 2.01 
 126:Src/usbd_desc.c ****                                                in order to support LPM L1 suspend
 127:Src/usbd_desc.c ****                                                resume test of USBCV3.0*/
 128:Src/usbd_desc.c **** #else  
 129:Src/usbd_desc.c ****     0x00,                       /* bcdUSB */
 130:Src/usbd_desc.c **** #endif
 131:Src/usbd_desc.c ****     0x02,
 132:Src/usbd_desc.c ****     0x00,                       /*bDeviceClass*/
 133:Src/usbd_desc.c ****     0x00,                       /*bDeviceSubClass*/
 134:Src/usbd_desc.c ****     0x00,                       /*bDeviceProtocol*/
 135:Src/usbd_desc.c ****     USB_MAX_EP0_SIZE,          /*bMaxPacketSize*/
 136:Src/usbd_desc.c ****     LOBYTE(USBD_VID),           /*idVendor*/
 137:Src/usbd_desc.c ****     HIBYTE(USBD_VID),           /*idVendor*/
 138:Src/usbd_desc.c ****     LOBYTE(USBD_PID_FS),           /*idVendor*/
 139:Src/usbd_desc.c ****     HIBYTE(USBD_PID_FS),           /*idVendor*/
 140:Src/usbd_desc.c ****     0x00,                       /*bcdDevice rel. 2.00*/
 141:Src/usbd_desc.c ****     0x02,
 142:Src/usbd_desc.c ****     USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 143:Src/usbd_desc.c ****     USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 144:Src/usbd_desc.c ****     USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 145:Src/usbd_desc.c ****     USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 146:Src/usbd_desc.c ****   } ; 
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 4


 147:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 148:Src/usbd_desc.c **** /* BOS descriptor */
 149:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 150:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 151:Src/usbd_desc.c ****   #pragma data_alignment=4   
 152:Src/usbd_desc.c **** #endif
 153:Src/usbd_desc.c **** __ALIGN_BEGIN  uint8_t USBD_FS_BOSDesc[USB_SIZ_BOS_DESC] __ALIGN_END =
 154:Src/usbd_desc.c **** {
 155:Src/usbd_desc.c ****   0x5,
 156:Src/usbd_desc.c ****   USB_DESC_TYPE_BOS,
 157:Src/usbd_desc.c ****   0xC,
 158:Src/usbd_desc.c ****   0x0,
 159:Src/usbd_desc.c ****   0x1,  /* 1 device capability */
 160:Src/usbd_desc.c ****         /* device capability*/
 161:Src/usbd_desc.c ****   0x7,
 162:Src/usbd_desc.c ****   USB_DEVICE_CAPABITY_TYPE,
 163:Src/usbd_desc.c ****   0x2,
 164:Src/usbd_desc.c ****   0x2, /*LPM capability bit set */
 165:Src/usbd_desc.c ****   0x0,
 166:Src/usbd_desc.c ****   0x0,
 167:Src/usbd_desc.c ****   0x0
 168:Src/usbd_desc.c **** };
 169:Src/usbd_desc.c **** #endif
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 172:Src/usbd_desc.c ****   #pragma data_alignment=4   
 173:Src/usbd_desc.c **** #endif
 174:Src/usbd_desc.c **** 
 175:Src/usbd_desc.c **** /* USB Standard Device Descriptor */
 176:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 177:Src/usbd_desc.c **** {
 178:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,         
 179:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,       
 180:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 181:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING), 
 182:Src/usbd_desc.c **** };
 183:Src/usbd_desc.c **** 
 184:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 185:Src/usbd_desc.c ****   #pragma data_alignment=4   
 186:Src/usbd_desc.c **** #endif
 187:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 188:Src/usbd_desc.c **** /**
 189:Src/usbd_desc.c ****   * @}
 190:Src/usbd_desc.c ****   */ 
 191:Src/usbd_desc.c **** 
 192:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes
 193:Src/usbd_desc.c ****   * @{
 194:Src/usbd_desc.c ****   */ 
 195:Src/usbd_desc.c **** /**
 196:Src/usbd_desc.c ****   * @}
 197:Src/usbd_desc.c ****   */ 
 198:Src/usbd_desc.c **** 
 199:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions
 200:Src/usbd_desc.c ****   * @{
 201:Src/usbd_desc.c ****   */ 
 202:Src/usbd_desc.c **** 
 203:Src/usbd_desc.c **** /**
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 5


 204:Src/usbd_desc.c **** * @brief  USBD_FS_DeviceDescriptor 
 205:Src/usbd_desc.c **** *         return the device descriptor
 206:Src/usbd_desc.c **** * @param  speed : current device speed
 207:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 208:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 209:Src/usbd_desc.c **** */
 210:Src/usbd_desc.c **** uint8_t *  USBD_FS_DeviceDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 211:Src/usbd_desc.c **** {
  27              		.loc 1 211 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 212:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
  33              		.loc 1 212 0
  34 0000 1223     		movs	r3, #18
  35 0002 0B80     		strh	r3, [r1]	@ movhi
 213:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 214:Src/usbd_desc.c **** }
  36              		.loc 1 214 0
  37 0004 0048     		ldr	r0, .L2
  38              	.LVL1:
  39 0006 7047     		bx	lr
  40              	.L3:
  41              		.align	2
  42              	.L2:
  43 0008 00000000 		.word	.LANCHOR0
  44              		.cfi_endproc
  45              	.LFE125:
  47              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
  48              		.align	1
  49              		.global	USBD_FS_LangIDStrDescriptor
  50              		.thumb
  51              		.thumb_func
  53              	USBD_FS_LangIDStrDescriptor:
  54              	.LFB126:
 215:Src/usbd_desc.c **** 
 216:Src/usbd_desc.c **** /**
 217:Src/usbd_desc.c **** * @brief  USBD_FS_LangIDStrDescriptor 
 218:Src/usbd_desc.c **** *         return the LangID string descriptor
 219:Src/usbd_desc.c **** * @param  speed : current device speed
 220:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 221:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 222:Src/usbd_desc.c **** */
 223:Src/usbd_desc.c **** uint8_t *  USBD_FS_LangIDStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 224:Src/usbd_desc.c **** {
  55              		.loc 1 224 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL2:
 225:Src/usbd_desc.c ****   *length =  sizeof(USBD_LangIDDesc);  
  61              		.loc 1 225 0
  62 0000 0423     		movs	r3, #4
  63 0002 0B80     		strh	r3, [r1]	@ movhi
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 6


 226:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 227:Src/usbd_desc.c **** }
  64              		.loc 1 227 0
  65 0004 0048     		ldr	r0, .L5
  66              	.LVL3:
  67 0006 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 0008 00000000 		.word	.LANCHOR1
  72              		.cfi_endproc
  73              	.LFE126:
  75              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
  76              		.align	1
  77              		.global	USBD_FS_ManufacturerStrDescriptor
  78              		.thumb
  79              		.thumb_func
  81              	USBD_FS_ManufacturerStrDescriptor:
  82              	.LFB128:
 228:Src/usbd_desc.c **** 
 229:Src/usbd_desc.c **** /**
 230:Src/usbd_desc.c **** * @brief  USBD_FS_ProductStrDescriptor 
 231:Src/usbd_desc.c **** *         return the product string descriptor
 232:Src/usbd_desc.c **** * @param  speed : current device speed
 233:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 234:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 235:Src/usbd_desc.c **** */
 236:Src/usbd_desc.c **** uint8_t *  USBD_FS_ProductStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 237:Src/usbd_desc.c **** {
 238:Src/usbd_desc.c ****   if(speed == 0)
 239:Src/usbd_desc.c ****   {   
 240:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 241:Src/usbd_desc.c ****   }
 242:Src/usbd_desc.c ****   else
 243:Src/usbd_desc.c ****   {
 244:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);    
 245:Src/usbd_desc.c ****   }
 246:Src/usbd_desc.c ****   return USBD_StrDesc;
 247:Src/usbd_desc.c **** }
 248:Src/usbd_desc.c **** 
 249:Src/usbd_desc.c **** /**
 250:Src/usbd_desc.c **** * @brief  USBD_FS_ManufacturerStrDescriptor 
 251:Src/usbd_desc.c **** *         return the manufacturer string descriptor
 252:Src/usbd_desc.c **** * @param  speed : current device speed
 253:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 254:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 255:Src/usbd_desc.c **** */
 256:Src/usbd_desc.c **** uint8_t *  USBD_FS_ManufacturerStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 257:Src/usbd_desc.c **** {
  83              		.loc 1 257 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL4:
  88 0000 10B5     		push	{r4, lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 7


  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
 258:Src/usbd_desc.c ****   USBD_GetString (USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
  93              		.loc 1 258 0
  94 0002 044C     		ldr	r4, .L8
  95 0004 0448     		ldr	r0, .L8+4
  96              	.LVL5:
 257:Src/usbd_desc.c **** {
  97              		.loc 1 257 0
  98 0006 0A46     		mov	r2, r1
  99              		.loc 1 258 0
 100 0008 2146     		mov	r1, r4
 101              	.LVL6:
 102 000a FFF7FEFF 		bl	USBD_GetString
 103              	.LVL7:
 259:Src/usbd_desc.c ****   return USBD_StrDesc;
 260:Src/usbd_desc.c **** }
 104              		.loc 1 260 0
 105 000e 2046     		mov	r0, r4
 106 0010 10BD     		pop	{r4, pc}
 107              	.L9:
 108 0012 00BF     		.align	2
 109              	.L8:
 110 0014 00000000 		.word	USBD_StrDesc
 111 0018 00000000 		.word	.LC0
 112              		.cfi_endproc
 113              	.LFE128:
 115              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 116              		.align	1
 117              		.global	USBD_FS_ProductStrDescriptor
 118              		.thumb
 119              		.thumb_func
 121              	USBD_FS_ProductStrDescriptor:
 122              	.LFB127:
 237:Src/usbd_desc.c **** {
 123              		.loc 1 237 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              	.LVL8:
 128 0000 10B5     		push	{r4, lr}
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 133              	.LBB4:
 134              	.LBB5:
 240:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 135              		.loc 1 240 0
 136 0002 044C     		ldr	r4, .L11
 137 0004 0448     		ldr	r0, .L11+4
 138              	.LVL9:
 139              	.LBE5:
 140              	.LBE4:
 237:Src/usbd_desc.c **** {
 141              		.loc 1 237 0
 142 0006 0A46     		mov	r2, r1
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 8


 143              	.LVL10:
 144              	.LBB7:
 145              	.LBB6:
 240:Src/usbd_desc.c ****     USBD_GetString (USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 146              		.loc 1 240 0
 147 0008 2146     		mov	r1, r4
 148              	.LVL11:
 149 000a FFF7FEFF 		bl	USBD_GetString
 150              	.LVL12:
 151              	.LBE6:
 152              	.LBE7:
 247:Src/usbd_desc.c **** }
 153              		.loc 1 247 0
 154 000e 2046     		mov	r0, r4
 155 0010 10BD     		pop	{r4, pc}
 156              	.L12:
 157 0012 00BF     		.align	2
 158              	.L11:
 159 0014 00000000 		.word	USBD_StrDesc
 160 0018 13000000 		.word	.LC1
 161              		.cfi_endproc
 162              	.LFE127:
 164              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 165              		.align	1
 166              		.global	USBD_FS_SerialStrDescriptor
 167              		.thumb
 168              		.thumb_func
 170              	USBD_FS_SerialStrDescriptor:
 171              	.LFB129:
 261:Src/usbd_desc.c **** 
 262:Src/usbd_desc.c **** /**
 263:Src/usbd_desc.c **** * @brief  USBD_FS_SerialStrDescriptor 
 264:Src/usbd_desc.c **** *         return the serial number string descriptor
 265:Src/usbd_desc.c **** * @param  speed : current device speed
 266:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 267:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 268:Src/usbd_desc.c **** */
 269:Src/usbd_desc.c **** uint8_t *  USBD_FS_SerialStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 270:Src/usbd_desc.c **** {
 172              		.loc 1 270 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL13:
 177 0000 10B5     		push	{r4, lr}
 178              	.LCFI2:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 4, -8
 181              		.cfi_offset 14, -4
 182              	.LBB10:
 183              	.LBB11:
 271:Src/usbd_desc.c ****   if(speed  == USBD_SPEED_HIGH)
 272:Src/usbd_desc.c ****   {    
 273:Src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);
 184              		.loc 1 273 0
 185 0002 044C     		ldr	r4, .L14
 186 0004 0448     		ldr	r0, .L14+4
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 9


 187              	.LVL14:
 188              	.LBE11:
 189              	.LBE10:
 270:Src/usbd_desc.c **** {
 190              		.loc 1 270 0
 191 0006 0A46     		mov	r2, r1
 192              	.LVL15:
 193              	.LBB13:
 194              	.LBB12:
 195              		.loc 1 273 0
 196 0008 2146     		mov	r1, r4
 197              	.LVL16:
 198 000a FFF7FEFF 		bl	USBD_GetString
 199              	.LVL17:
 200              	.LBE12:
 201              	.LBE13:
 274:Src/usbd_desc.c ****   }
 275:Src/usbd_desc.c ****   else
 276:Src/usbd_desc.c ****   {
 277:Src/usbd_desc.c ****     USBD_GetString (USBD_SERIALNUMBER_STRING_FS, USBD_StrDesc, length);    
 278:Src/usbd_desc.c ****   }
 279:Src/usbd_desc.c ****   return USBD_StrDesc;
 280:Src/usbd_desc.c **** }
 202              		.loc 1 280 0
 203 000e 2046     		mov	r0, r4
 204 0010 10BD     		pop	{r4, pc}
 205              	.L15:
 206 0012 00BF     		.align	2
 207              	.L14:
 208 0014 00000000 		.word	USBD_StrDesc
 209 0018 29000000 		.word	.LC2
 210              		.cfi_endproc
 211              	.LFE129:
 213              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 214              		.align	1
 215              		.global	USBD_FS_ConfigStrDescriptor
 216              		.thumb
 217              		.thumb_func
 219              	USBD_FS_ConfigStrDescriptor:
 220              	.LFB130:
 281:Src/usbd_desc.c **** 
 282:Src/usbd_desc.c **** /**
 283:Src/usbd_desc.c **** * @brief  USBD_FS_ConfigStrDescriptor 
 284:Src/usbd_desc.c **** *         return the configuration string descriptor
 285:Src/usbd_desc.c **** * @param  speed : current device speed
 286:Src/usbd_desc.c **** * @param  length : pointer to data length variable
 287:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 288:Src/usbd_desc.c **** */
 289:Src/usbd_desc.c **** uint8_t *  USBD_FS_ConfigStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 290:Src/usbd_desc.c **** {
 221              		.loc 1 290 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              	.LVL18:
 226 0000 10B5     		push	{r4, lr}
 227              	.LCFI3:
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 10


 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 14, -4
 231              	.LBB16:
 232              	.LBB17:
 291:Src/usbd_desc.c ****   if(speed  == USBD_SPEED_HIGH)
 292:Src/usbd_desc.c ****   {  
 293:Src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 233              		.loc 1 293 0
 234 0002 044C     		ldr	r4, .L17
 235 0004 0448     		ldr	r0, .L17+4
 236              	.LVL19:
 237              	.LBE17:
 238              	.LBE16:
 290:Src/usbd_desc.c **** {
 239              		.loc 1 290 0
 240 0006 0A46     		mov	r2, r1
 241              	.LVL20:
 242              	.LBB19:
 243              	.LBB18:
 244              		.loc 1 293 0
 245 0008 2146     		mov	r1, r4
 246              	.LVL21:
 247 000a FFF7FEFF 		bl	USBD_GetString
 248              	.LVL22:
 249              	.LBE18:
 250              	.LBE19:
 294:Src/usbd_desc.c ****   }
 295:Src/usbd_desc.c ****   else
 296:Src/usbd_desc.c ****   {
 297:Src/usbd_desc.c ****     USBD_GetString (USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length); 
 298:Src/usbd_desc.c ****   }
 299:Src/usbd_desc.c ****   return USBD_StrDesc;  
 300:Src/usbd_desc.c **** }
 251              		.loc 1 300 0
 252 000e 2046     		mov	r0, r4
 253 0010 10BD     		pop	{r4, pc}
 254              	.L18:
 255 0012 00BF     		.align	2
 256              	.L17:
 257 0014 00000000 		.word	USBD_StrDesc
 258 0018 36000000 		.word	.LC3
 259              		.cfi_endproc
 260              	.LFE130:
 262              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 263              		.align	1
 264              		.global	USBD_FS_InterfaceStrDescriptor
 265              		.thumb
 266              		.thumb_func
 268              	USBD_FS_InterfaceStrDescriptor:
 269              	.LFB131:
 301:Src/usbd_desc.c **** 
 302:Src/usbd_desc.c **** /**
 303:Src/usbd_desc.c **** * @brief  USBD_HS_InterfaceStrDescriptor 
 304:Src/usbd_desc.c **** *         return the interface string descriptor
 305:Src/usbd_desc.c **** * @param  speed : current device speed
 306:Src/usbd_desc.c **** * @param  length : pointer to data length variable
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 11


 307:Src/usbd_desc.c **** * @retval pointer to descriptor buffer
 308:Src/usbd_desc.c **** */
 309:Src/usbd_desc.c **** uint8_t *  USBD_FS_InterfaceStrDescriptor( USBD_SpeedTypeDef speed , uint16_t *length)
 310:Src/usbd_desc.c **** {
 270              		.loc 1 310 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              	.LVL23:
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI4:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 280              	.LBB22:
 281              	.LBB23:
 311:Src/usbd_desc.c ****   if(speed == 0)
 312:Src/usbd_desc.c ****   {
 313:Src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 282              		.loc 1 313 0
 283 0002 044C     		ldr	r4, .L20
 284 0004 0448     		ldr	r0, .L20+4
 285              	.LVL24:
 286              	.LBE23:
 287              	.LBE22:
 310:Src/usbd_desc.c **** {
 288              		.loc 1 310 0
 289 0006 0A46     		mov	r2, r1
 290              	.LVL25:
 291              	.LBB25:
 292              	.LBB24:
 293              		.loc 1 313 0
 294 0008 2146     		mov	r1, r4
 295              	.LVL26:
 296 000a FFF7FEFF 		bl	USBD_GetString
 297              	.LVL27:
 298              	.LBE24:
 299              	.LBE25:
 314:Src/usbd_desc.c ****   }
 315:Src/usbd_desc.c ****   else
 316:Src/usbd_desc.c ****   {
 317:Src/usbd_desc.c ****     USBD_GetString (USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 318:Src/usbd_desc.c ****   }
 319:Src/usbd_desc.c ****   return USBD_StrDesc;  
 320:Src/usbd_desc.c **** }
 300              		.loc 1 320 0
 301 000e 2046     		mov	r0, r4
 302 0010 10BD     		pop	{r4, pc}
 303              	.L21:
 304 0012 00BF     		.align	2
 305              	.L20:
 306 0014 00000000 		.word	USBD_StrDesc
 307 0018 41000000 		.word	.LC4
 308              		.cfi_endproc
 309              	.LFE131:
 311              		.comm	USBD_StrDesc,512,4
 312              		.global	USBD_LangIDDesc
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 12


 313              		.global	USBD_FS_DeviceDesc
 314              		.global	FS_Desc
 315              		.section	.rodata.str1.1,"aMS",%progbits,1
 316              	.LC0:
 317 0000 53544D69 		.ascii	"STMicroelectronics\000"
 317      63726F65 
 317      6C656374 
 317      726F6E69 
 317      637300
 318              	.LC1:
 319 0013 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 319      32205669 
 319      72747561 
 319      6C20436F 
 319      6D506F72 
 320              	.LC2:
 321 0029 30303030 		.ascii	"00000000001A\000"
 321      30303030 
 321      30303141 
 321      00
 322              	.LC3:
 323 0036 43444320 		.ascii	"CDC Config\000"
 323      436F6E66 
 323      696700
 324              	.LC4:
 325 0041 43444320 		.ascii	"CDC Interface\000"
 325      496E7465 
 325      72666163 
 325      6500
 326              		.section	.data.FS_Desc,"aw",%progbits
 327              		.align	2
 330              	FS_Desc:
 331 0000 00000000 		.word	USBD_FS_DeviceDescriptor
 332 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
 333 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
 334 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
 335 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
 336 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
 337 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
 338              		.section	.data.USBD_LangIDDesc,"aw",%progbits
 339              		.align	2
 340              		.set	.LANCHOR1,. + 0
 343              	USBD_LangIDDesc:
 344 0000 04       		.byte	4
 345 0001 03       		.byte	3
 346 0002 09       		.byte	9
 347 0003 04       		.byte	4
 348              		.section	.data.USBD_FS_DeviceDesc,"aw",%progbits
 349              		.align	2
 350              		.set	.LANCHOR0,. + 0
 353              	USBD_FS_DeviceDesc:
 354 0000 12       		.byte	18
 355 0001 01       		.byte	1
 356 0002 00       		.byte	0
 357 0003 02       		.byte	2
 358 0004 00       		.byte	0
 359 0005 00       		.byte	0
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 13


 360 0006 00       		.byte	0
 361 0007 40       		.byte	64
 362 0008 83       		.byte	-125
 363 0009 04       		.byte	4
 364 000a 40       		.byte	64
 365 000b 57       		.byte	87
 366 000c 00       		.byte	0
 367 000d 02       		.byte	2
 368 000e 01       		.byte	1
 369 000f 02       		.byte	2
 370 0010 03       		.byte	3
 371 0011 01       		.byte	1
 372 0012 0000     		.text
 373              	.Letext0:
 374              		.file 2 "/Users/Arethusa/Library/Arduino15/packages/arduino/tools/arm-none-eabi-gcc/4.8.3-2014q1/a
 375              		.file 3 "/Users/Arethusa/Library/Arduino15/packages/arduino/tools/arm-none-eabi-gcc/4.8.3-2014q1/a
 376              		.file 4 "Inc/usbd_def.h"
 377              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 378              		.file 6 "Inc/usbd_ctlreq.h"
ARM GAS  /var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:19     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:24     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:43     .text.USBD_FS_DeviceDescriptor:0000000000000008 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:48     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:53     .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:71     .text.USBD_FS_LangIDStrDescriptor:0000000000000008 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:76     .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:81     .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:110    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000014 $d
                            *COM*:0000000000000200 USBD_StrDesc
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:116    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:121    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:159    .text.USBD_FS_ProductStrDescriptor:0000000000000014 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:165    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:170    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:208    .text.USBD_FS_SerialStrDescriptor:0000000000000014 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:214    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:219    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:257    .text.USBD_FS_ConfigStrDescriptor:0000000000000014 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:263    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:268    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:306    .text.USBD_FS_InterfaceStrDescriptor:0000000000000014 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:343    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:353    .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:330    .data.FS_Desc:0000000000000000 FS_Desc
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:327    .data.FS_Desc:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:339    .data.USBD_LangIDDesc:0000000000000000 $d
/var/folders/19/rz7506jh8xn7x1006s6s574h0000gn/T//cceSru7L.s:349    .data.USBD_FS_DeviceDesc:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
USBD_GetString
